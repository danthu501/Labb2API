// <auto-generated />
using Labb2API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Labb2API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221019122139_ChangedGetAllEmployees")]
    partial class ChangedGetAllEmployees
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Labb2API.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"), 1L, 1);

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            DepartmentName = "It"
                        },
                        new
                        {
                            DepartmentId = 2,
                            DepartmentName = "Economy"
                        });
                });

            modelBuilder.Entity("Labb2API.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StreetAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zipcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            City = "Varberg",
                            DepartmentId = 1,
                            Email = "danne@g-bk.com",
                            FirstName = "Daniel",
                            Gender = "m",
                            LastName = "Thulin",
                            PhoneNumber = "0730597135",
                            Salary = 24500m,
                            StreetAdress = "Kiselgatan 69",
                            Zipcode = "43256"
                        },
                        new
                        {
                            EmployeeId = 2,
                            City = "Varberg",
                            DepartmentId = 1,
                            Email = "danne@g-bk.com",
                            FirstName = "Testa",
                            Gender = "m",
                            LastName = "kul",
                            PhoneNumber = "0730597135",
                            Salary = 24500m,
                            StreetAdress = "storgatan 23",
                            Zipcode = "43256"
                        },
                        new
                        {
                            EmployeeId = 3,
                            City = "Varberg",
                            DepartmentId = 1,
                            Email = "danne@g-bk.com",
                            FirstName = "Daniel",
                            Gender = "m",
                            LastName = "Thulin",
                            PhoneNumber = "0730597135",
                            Salary = 24500m,
                            StreetAdress = "Kiselgatan 69",
                            Zipcode = "43256"
                        },
                        new
                        {
                            EmployeeId = 4,
                            City = "Varberg",
                            DepartmentId = 2,
                            Email = "as@gmail.com",
                            FirstName = "Anders",
                            Gender = "m",
                            LastName = "Svensson",
                            PhoneNumber = "0730987654",
                            Salary = 34500m,
                            StreetAdress = "Kastanjevägen 13",
                            Zipcode = "43231"
                        });
                });

            modelBuilder.Entity("Labb2API.Models.Employee", b =>
                {
                    b.HasOne("Labb2API.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });
#pragma warning restore 612, 618
        }
    }
}
